mod controller;
use std::fs;

fn main() {
    // println!("{:?}", part1);
    run_program();
}


fn run_program() {
    let [mut v0, mut v1, mut v2, mut v3, mut v4, mut ip] = [0, 0, 0, 0, 0, 0];

    // let mut cycle = 0;
    while ip <= 30  {
        match ip {
            // 0 =>{ v2 = 123; }
            // 1 =>{ v2 &= 456; }
            // 2 =>{ v2 = (72 == v2) as i64}
            // 3 =>{ ip += v2; }
            // 4 =>{ ip = 0; }
            5 =>{ v2 = 0; }
            6 =>{ v1 = 65536 | v2; }
            7 =>{ v2 = 1250634 }
            8 =>{ v4 = v1 & 255}
            9 =>{ v2 = v4 + v2}
            10 =>{ v2 &= 16777215}
            11 =>{ v2 *= 65899}
            12 =>{ v2 &= 16777215}
            13 =>{ v4 = (256 > v1) as i64}
            14 =>{ ip += v4}
            15 =>{ ip += 1}
            16 =>{ ip = 27 }
            17 =>{ v4 = 0 }
            18 =>{ v3 = v4 + 1}
            19 =>{ v3 *= 256}
            20 =>{ v3 = (v3 > v1) as i64}
            21 =>{ ip += v3}
            22 =>{ ip += 1}
            23 =>{ ip = 25}
            24 =>{ v4 += 1}
            25 =>{ ip = 17}
            26 =>{v1 = v4}
            27 =>{ip = 7}
            28 =>{
                println!("{}", v2);
                v4 = (v2 == v0) as i64;
                break;
            }
            29 =>{ip += v4}
            30 =>{ip = 5}
            _ => {}

        }
        // println!("{} {} {} {} {} {}", v0, v1, v2, v3, v4, ip);
        ip += 1;
    }
}

// loop {
//     v1 = 65536 | v2;
//     v2 = 1250634;
//     while 256 <= v1 {
//         v4 = v1 & 255;
//         v2 += v4;
//         v2 &= 16777215;
//         v2 *= 65899;
//         v2 &= 16777215;
//         v4 = 0;
//         while ((v4 + 1) * 256) <= v1 {
//             // println!("{} {} {} {} {} {}", v0, v1, v2, (v4 + 1) * 256, v4, ip);
//             v4 += 1;
//         }
        
//         v1 = v4;
//         // println!("{}", v1);
//     }
//     println!("{}", v2);
// }